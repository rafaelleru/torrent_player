{
  "_args": [
    [
      {
        "raw": "mediasource@^2.1.0",
        "scope": null,
        "escapedName": "mediasource",
        "name": "mediasource",
        "rawSpec": "^2.1.0",
        "spec": ">=2.1.0 <3.0.0",
        "type": "range"
      },
      "/data/mis_programas/torrent-player/node_modules/render-media"
    ]
  ],
  "_from": "mediasource@>=2.1.0 <3.0.0",
  "_id": "mediasource@2.1.3",
  "_inCache": true,
  "_location": "/mediasource",
  "_nodeVersion": "4.4.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/mediasource-2.1.3.tgz_1459234635045_0.9693203445058316"
  },
  "_npmUser": {
    "name": "feross",
    "email": "feross@feross.org"
  },
  "_npmVersion": "2.15.1",
  "_phantomChildren": {
    "core-util-is": "1.0.2",
    "inherits": "2.0.3",
    "process-nextick-args": "1.0.7",
    "safe-buffer": "5.1.1",
    "util-deprecate": "1.0.2"
  },
  "_requested": {
    "raw": "mediasource@^2.1.0",
    "scope": null,
    "escapedName": "mediasource",
    "name": "mediasource",
    "rawSpec": "^2.1.0",
    "spec": ">=2.1.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/render-media",
    "/videostream"
  ],
  "_resolved": "https://registry.npmjs.org/mediasource/-/mediasource-2.1.3.tgz",
  "_shasum": "27a9c1aac51bfb6eba96af2d13a84d0b2a8eac68",
  "_shrinkwrap": null,
  "_spec": "mediasource@^2.1.0",
  "_where": "/data/mis_programas/torrent-player/node_modules/render-media",
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "http://feross.org/"
  },
  "bugs": {
    "url": "https://github.com/feross/mediasource/issues"
  },
  "dependencies": {
    "inherits": "^2.0.1",
    "readable-stream": "^2.0.5",
    "to-arraybuffer": "^1.0.1"
  },
  "description": "MediaSource API as a node.js Writable stream",
  "devDependencies": {
    "brfs": "^1.4.1",
    "standard": "^6.0.5",
    "tape": "^4.0.0",
    "zuul": "^3.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "27a9c1aac51bfb6eba96af2d13a84d0b2a8eac68",
    "tarball": "https://registry.npmjs.org/mediasource/-/mediasource-2.1.3.tgz"
  },
  "gitHead": "49fce2e5200e992a77d0ae5ec599fd8faaeb9229",
  "homepage": "https://github.com/feross/mediasource",
  "keywords": [
    "mediasource",
    "media source",
    "mediasource api",
    "writable",
    "write",
    "stream",
    "write stream",
    "writable stream"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "feross",
      "email": "feross@feross.org"
    },
    {
      "name": "jhiesey",
      "email": "john@hiesey.com"
    }
  ],
  "name": "mediasource",
  "optionalDependencies": {},
  "readme": "# mediasource [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url]\n\n[travis-image]: https://img.shields.io/travis/feross/mediasource/master.svg\n[travis-url]: https://travis-ci.org/feross/mediasource\n[npm-image]: https://img.shields.io/npm/v/mediasource.svg\n[npm-url]: https://npmjs.org/package/mediasource\n[downloads-image]: https://img.shields.io/npm/dm/mediasource.svg\n[downloads-url]: https://npmjs.org/package/mediasource\n\n### MediaSource API as a node.js Writable stream\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/mediasource.svg)](https://saucelabs.com/u/mediasource)\n\nStream video/audio into a `<video>` or `<audio>` tag by attaching node.js Writable streams.\n\nThis package is used by [WebTorrent](http://webtorrent.io) (along with other approaches)\nto support media streaming.\n\n## install\n\n```\nnpm install mediasource\n```\n\n## usage\n\n```js\nvar MediaElementWrapper = require('mediasource')\n\nfunction createElem (tagName) {\n  var elem = document.createElement(tagName)\n  elem.controls = true\n  elem.autoplay = true // for chrome\n  elem.play() // for firefox\n  document.body.appendChild(elem)\n  return elem\n}\n\nvar elem = createElem('video')\n\nvar readable = // ... get a readable stream from somewhere\nvar wrapper = new MediaElementWrapper(elem)\n// The correct mime type, including codecs, must be provided\nvar writable = wrapper.createWriteStream('video/webm; codecs=\"vorbis, vp8\"')\n\nelem.addEventListener('error', function () {\n  // listen for errors on the video/audio element directly\n  var errorCode = elem.error\n  var detailedError = wrapper.detailedError\n  // wrapper.detailedError will often have a more detailed error message\n})\n\nwritable.on('error', function (err) {\n  // listening to the stream 'error' event is optional\n})\n\nreadable.pipe(writable)\n\n// media should start playing now!\n```\n\n### advanced usage\n\n`wrapper.createWriteStream()` can be called multiple times if different tracks (e.g. audio and video) need to\nbe passed in separate streams. Each call should be made with the correct mime type.\n\nInstead of a mime type, an existing MediaSourceStream (as returned by `wrapper.createWriteStream()`) can be\npassed as the single argument to `wrapper.createWriteStream()`, which will cause the existing stream to be\nreplaced by the newly returned stream. This is useful when you want to cancel the existing stream\nand replace it with a new one, e.g. when seeking.\n\n### options\n\n#### opts.bufferDuration\n\nSpecify how many seconds of media should be put into the browser's buffer before applying backpressure.\n\n### errors\n\nHandle errors by listening to the `'error'` event on the `<video>` or `<audio>` tag.\n\nSome (but not all) errors will also cause `wrapper.detailedError` to be set to an error value that has\na more informative error message.\n\n## license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/mediasource.git"
  },
  "scripts": {
    "test": "standard && zuul -- test/*.js",
    "test-local": "zuul --local -- test/*.js"
  },
  "version": "2.1.3"
}
