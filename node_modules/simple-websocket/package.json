{
  "_args": [
    [
      {
        "raw": "simple-websocket@^5.0.0",
        "scope": null,
        "escapedName": "simple-websocket",
        "name": "simple-websocket",
        "rawSpec": "^5.0.0",
        "spec": ">=5.0.0 <6.0.0",
        "type": "range"
      },
      "/data/mis_programas/torrent-player/node_modules/bittorrent-tracker"
    ]
  ],
  "_from": "simple-websocket@>=5.0.0 <6.0.0",
  "_id": "simple-websocket@5.0.2",
  "_inCache": true,
  "_location": "/simple-websocket",
  "_nodeVersion": "7.8.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/simple-websocket-5.0.2.tgz_1491609564019_0.06498674931935966"
  },
  "_npmUser": {
    "name": "feross",
    "email": "feross@feross.org"
  },
  "_npmVersion": "4.4.4",
  "_phantomChildren": {
    "core-util-is": "1.0.2",
    "inherits": "2.0.3",
    "process-nextick-args": "1.0.7",
    "safe-buffer": "5.1.1",
    "ultron": "1.1.0",
    "util-deprecate": "1.0.2"
  },
  "_requested": {
    "raw": "simple-websocket@^5.0.0",
    "scope": null,
    "escapedName": "simple-websocket",
    "name": "simple-websocket",
    "rawSpec": "^5.0.0",
    "spec": ">=5.0.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/bittorrent-tracker"
  ],
  "_resolved": "https://registry.npmjs.org/simple-websocket/-/simple-websocket-5.0.2.tgz",
  "_shasum": "040d90dea9e4199a97613394ce68932c4aef3d44",
  "_shrinkwrap": null,
  "_spec": "simple-websocket@^5.0.0",
  "_where": "/data/mis_programas/torrent-player/node_modules/bittorrent-tracker",
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "http://feross.org/"
  },
  "browser": {
    "ws": false
  },
  "bugs": {
    "url": "https://github.com/feross/simple-websocket/issues"
  },
  "dependencies": {
    "debug": "^2.1.3",
    "inherits": "^2.0.1",
    "randombytes": "^2.0.3",
    "readable-stream": "^2.0.5",
    "safe-buffer": "^5.0.1",
    "ws": "^2.0.0"
  },
  "description": "Simple, EventEmitter API for WebSockets (browser)",
  "devDependencies": {
    "browserify": "^14.0.0",
    "prettier-bytes": "^1.0.3",
    "speedometer": "^1.0.0",
    "standard": "*",
    "tape": "^4.0.0",
    "uglify-js": "^2.4.15",
    "zuul": "^3.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "040d90dea9e4199a97613394ce68932c4aef3d44",
    "tarball": "https://registry.npmjs.org/simple-websocket/-/simple-websocket-5.0.2.tgz"
  },
  "gitHead": "8f1cf612c055d41e5616281d206671bd6d37cb6f",
  "homepage": "https://github.com/feross/simple-websocket",
  "keywords": [
    "simple",
    "simple websocket",
    "simple-websocket",
    "socket",
    "websocket",
    "ws"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "feross",
      "email": "feross@feross.org"
    }
  ],
  "name": "simple-websocket",
  "optionalDependencies": {},
  "readme": "# simple-websocket [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/simple-websocket/master.svg\n[travis-url]: https://travis-ci.org/feross/simple-websocket\n[npm-image]: https://img.shields.io/npm/v/simple-websocket.svg\n[npm-url]: https://npmjs.org/package/simple-websocket\n[downloads-image]: https://img.shields.io/npm/dm/simple-websocket.svg\n[downloads-url]: https://npmjs.org/package/simple-websocket\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n#### Simple, EventEmitter API for WebSockets\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/simple-websocket.svg)](https://saucelabs.com/u/simple-websocket)\n\n## features\n\n- **super simple** API for working with WebSockets in the browser\n- supports **text and binary data**\n- node.js [duplex stream](http://nodejs.org/api/stream.html) interface\n- client & server implementations\n\nThis module works in the browser with [browserify](http://browserify.org/), and it's used by [WebTorrent](http://webtorrent.io)!\n\n## install\n\n```\nnpm install simple-websocket\n```\n\n## real-world applications that use simple-websocket\n\n- [StudyNotes](http://www.apstudynotes.org) - Helping students learn faster and better\n- [WebTorrent](https://webtorrent.io) - The streaming torrent app\n- [bittorrent-tracker](https://github.com/feross/bittorrent-tracker) - Simple, robust, BitTorrent tracker (client & server) implementation\n- [instant.io](https://github.com/feross/instant.io) - Secure, anonymous, streaming file transfer\n- [lxjs-chat](https://github.com/feross/lxjs-chat) - Omegle chat clone\n- \\[ your application here - send a PR \\]\n\n## usage\n\n```js\nvar Socket = require('simple-websocket')\n\nvar socket = new Socket('ws://echo.websocket.org')\nsocket.on('connect', function () {\n  // socket is connected!\n  socket.send('sup!')\n})\n\nsocket.on('data', function (data) {\n  console.log('got message: ' + data)\n})\n```\n\nNote: If you're **NOT** using browserify, then use the standalone `simplewebsocket.min.js`\nfile included in this repo. This exports a `SimpleWebsocket` function on the `window`.\n\n## api\n\n### `socket = new Socket(url)`\n\nCreate a new WebSocket connection to the server at `url`. This usage is a shorthand\nfor `socket = new Socket({ url: url })\n\n### `socket = new Socket(opts)`\n\nIf `opts.url` is specified as a string, then a WebSocket connection will be created\nto the server at `opts.url`.\n\nIf `opts.socket` is specified as an instance of a raw WebSocket object, then the\ngiven WebSocket object will be used and one will not be automatically be created\ninternally. (This is for advanced users.)\n\nOther properties on `opts` will be passed through to the underlying superclass,\n`stream.Duplex`.\n\n### `socket.send(data)`\n\nSend text/binary data to the WebSocket server. `data` can be any of several types:\n`String`, `Buffer` (see [buffer](https://github.com/feross/buffer)), `TypedArrayView`\n(`Uint8Array`, etc.), `ArrayBuffer`, or `Blob` (in browsers that support it).\n\nNote: If this method is called before the `socket.on('connect')` event has fired, then\ndata will be buffered.\n\n### `socket.destroy([onclose])`\n\nDestroy and cleanup this websocket connection.\n\nIf the optional `onclose` paramter is passed, then it will be registered as a listener on the 'close' event.\n\n### `Socket.WEBSOCKET_SUPPORT`\n\nDetect WebSocket support in the javascript environment.\n\n```js\nvar Socket = require('simple-websocket')\n\nif (Socket.WEBSOCKET_SUPPORT) {\n  // websocket support!\n} else {\n  // fallback\n}\n```\n\n## events\n\n### `socket.on('connect', function () {})`\n\nFired when the websocket connection is ready to use.\n\n### `socket.on('data', function (data) {})`\n\nReceived a message from the websocket server.\n\n`data` will be either a `String` or a `Buffer/Uint8Array` (see [buffer](https://github.com/feross/buffer)).\nJSON strings will be parsed and the resulting `Object` emitted.\n\n### `socket.on('close', function () {})`\n\nCalled when the websocket connection has closed.\n\n### `socket.on('error', function (err) {})`\n\n`err` is an `Error` object.\n\nFired when a fatal error occurs.\n\n## server\n\nThe server implementation is basically `ws` but the `'connection'` event provides\nsockets that are instances of `simple-websocket`, i.e. they are duplex streams.\n\n```js\nvar Server = require('simple-websocket/server')\n\nvar server = new Server({ port: port }) // see `ws` docs for other options\n\nserver.on('connection', function (socket) {\n  socket.write('pong')\n  socket.on('data', function (data) {})\n  socket.on('close', function () {})\n  socket.on('error', function (err) {})\n})\n\nserver.close()\n```\n\n## license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/simple-websocket.git"
  },
  "scripts": {
    "build": "browserify -s SimpleWebsocket -r ./ | uglifyjs -c warnings=false -m > simplewebsocket.min.js",
    "start": "node server.js",
    "test": "standard && npm run test-node && npm run test-browser",
    "test-browser": "zuul -- test/*.js",
    "test-browser-local": "zuul --local -- test/*.js",
    "test-node": "tape test/*.js test/node/*.js"
  },
  "version": "5.0.2"
}
