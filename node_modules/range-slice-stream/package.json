{
  "_args": [
    [
      {
        "raw": "range-slice-stream@^1.2.0",
        "scope": null,
        "escapedName": "range-slice-stream",
        "name": "range-slice-stream",
        "rawSpec": "^1.2.0",
        "spec": ">=1.2.0 <2.0.0",
        "type": "range"
      },
      "/data/mis_programas/torrent-player/node_modules/videostream"
    ]
  ],
  "_from": "range-slice-stream@>=1.2.0 <2.0.0",
  "_id": "range-slice-stream@1.2.0",
  "_inCache": true,
  "_location": "/range-slice-stream",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/range-slice-stream-1.2.0.tgz_1484373094810_0.8022685418836772"
  },
  "_npmUser": {
    "name": "jhiesey",
    "email": "john@hiesey.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {
    "core-util-is": "1.0.2",
    "inherits": "2.0.3",
    "process-nextick-args": "1.0.7",
    "safe-buffer": "5.1.1",
    "util-deprecate": "1.0.2"
  },
  "_requested": {
    "raw": "range-slice-stream@^1.2.0",
    "scope": null,
    "escapedName": "range-slice-stream",
    "name": "range-slice-stream",
    "rawSpec": "^1.2.0",
    "spec": ">=1.2.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/videostream"
  ],
  "_resolved": "https://registry.npmjs.org/range-slice-stream/-/range-slice-stream-1.2.0.tgz",
  "_shasum": "01ba954276052b783900e63d6118d8fcf3875d7f",
  "_shrinkwrap": null,
  "_spec": "range-slice-stream@^1.2.0",
  "_where": "/data/mis_programas/torrent-player/node_modules/videostream",
  "author": {
    "name": "John Hiesey"
  },
  "bugs": {
    "url": "https://github.com/jhiesey/range-slice-stream/issues"
  },
  "dependencies": {
    "inherits": "^2.0.1",
    "readable-stream": "^2.0.5"
  },
  "description": "Get slices of a stream",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "01ba954276052b783900e63d6118d8fcf3875d7f",
    "tarball": "https://registry.npmjs.org/range-slice-stream/-/range-slice-stream-1.2.0.tgz"
  },
  "gitHead": "2b6a25ca870e84e7ca7ca0b8dc1a7d76fbb2970c",
  "homepage": "https://github.com/jhiesey/range-slice-stream#readme",
  "keywords": [
    "stream",
    "slice",
    "substream",
    "range"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jhiesey",
      "email": "john@hiesey.com"
    }
  ],
  "name": "range-slice-stream",
  "optionalDependencies": {},
  "readme": "# range-slice-stream\n\nExtract a bunch of ranges from a stream to construct a new stream\n\n## Usage\n\n``` js\nvar RangeSliceStream = require('range-slice-stream')\n\nvar slicer = new RangeSliceStream()\nslicer.end('abcdefghijklmnop')\n\nvar out = slicer.slice([\n{\n\tstart: 1,\n\tend: 3\n},\n{\n\tstart: 6,\n\tend: 9\n}\n])\n\nout.pipe(process.stdout)\n\n// Prints 'bcghi'\n```\n\n## API\n\n#### `var slicer = new RangeSliceStream([offset[, opts]])`\n\nCreate a new slicer, which is a writable stream.\n\nIf an `offset` is provided, it is subtracted from all range offsets. This\nmakes it more intuitive to use if the incoming data stream itself starts\nat an offset into an underlying resource like a file.\n\n`opts` is passed to the underlying writable stream constructor.\n\n#### `var slice = slicer.slice([{start: <s1>, end: <e1>}, {start: <s2>, end: <e2>},...])`\n\nGet a new readable stream that is built by concatenating the data from one\nor more byte ranges of the data piped into the slicer. Like the `Buffer.slice()`\nmethod, `start` is inclusive and `end` is exclusive.\n\n`slice()` can be called multiple times to generate multiple streams built from\ndifferent sets of ranges. However, all ranges *must* be provided in increasing\norder, both within a given call to `slice()` and between calls.\n\nData between ranges is discarded. Once all ranges specified by `slice()` calls\nare satisfied, backpressure will be applied to the incoming stream until the\nnext desired range is specified by calling `slice()` again.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jhiesey/range-slice-stream.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.2.0"
}
